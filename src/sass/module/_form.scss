// Form Module ----------------------------------------------------------------

fieldset {
	@extend .por;
	@extend .m0;
	@extend .p0;
	border: none;

	legend {
		@extend .por;
		@extend .db;
		@extend .w100;
		@extend .p0;
		@extend .mb1;
		@extend .lh1;

		span {
			@extend .dib;
			@extend .pr1;
			font-size: .8em;
			@extend .ttu;
			color: rgba($doc-color, .5);
			@extend .bgc-white;
		}

		&:after {
			content: '';
			@extend .poa;
			@extend .l0;
			@extend .t0;
			z-index: -1;
			@extend .w100;
			@extend .h100;
			background-image: linear-gradient(rgba($doc-color, .1), rgba($doc-color, .1));
			background-repeat: repeat-x;
			background-position: left .6em;
			background-size: rem(1) rem(1);
		}
	}
}

label {
	&.icon-field {
		@extend .por;

		span {
			@extend .poa;
			@extend .lh;
			@extend .centery;
		}

		svg {
			@extend .db;
			fill: color('mobster');
		}

		input:not([type="checkbox"]):not([type="radio"]),
		textarea {
			@extend .pl2;
		}
	}

	& > span {
		font-size: .9em;
		@extend .c-mobster;

		sup {
			color: $reporting-error;
		}
	}

	&.has-error > span {
		color: $reporting-error;
	}

	input[type="checkbox"],
	input[type="radio"] {
		@extend .hide;

		& + span {
			@extend .por;
			@extend .db;
			padding-left: 1.5rem;
		}

		& + span:before {
			content: '';
			@extend .poa;
			@extend .l0;
			top: .2em;
			@extend .dib;
			width: 1rem;
			height: 1rem;
			@extend .mrh;
			border: rem(2) solid color('mobster');
			@extend .vam;
		}

		&:focus + span:before {
			border-color: tint(color('mobster'), 40);
		}
	}

	input[type="checkbox"]:checked + span:after {
		content: '';
		@extend .poa;
		@extend .db;
		top: rem(7);
		left: rem(6);
		width: rem(4);
		height: rem(7);
		border: solid shade(color('rio-grande'), 30);
		border-width: 0 rem(2) rem(2) 0;
		transform: rotate(45deg);
		-ms-transform: rotate(45deg);
	}

	input[type="checkbox"][indeterminate] + span:after {
		content: '';
		@extend .poa;
		@extend .db;
		top: .6rem;
		left: rem(6);
		width: rem(4);
		height: rem(2);
		background-color: color('white');
	}

	input[type="radio"] + span:before,
	input[type="radio"]:checked + span:after {
		border-radius: 100%;
	}

	input[type="radio"]:checked + span:before,
	input[type="checkbox"]:checked + span:before {
		background-color: color('rio-grande');
		border-color: color('rio-grande');
	}

	input[type="checkbox"][indeterminate] + span:before {
		background-color: color('mobster');
	}

	.field-info {
		@extend small;
		line-height: 1.2;
		@extend .text-muted;
		@extend .pl1;
		border-left: rem(3) solid color('off-white');
	}
}

input,
textarea,
select {
	@extend .mt0;
	@extend .mb0;
	border: rem(1) solid rgba($doc-color, .2);
	outline: none;

	.has-error & {
		border-color: $reporting-error;
	}

	.has-error &:focus,
	&:focus {
		border-color: color('rio-grande');
	}
}

input,
textarea {
	@extend .pyh;
	@extend .px1;
}

input[type="checkbox"],
input[type="radio"] {
	padding: auto;
	border: none;

	&:focus {
		border: none;
	}
}

.password-display-trigger {
	@extend .px1;
	padding-top: .3em;
	height: em(42);
	line-height: inherit;

	svg {
		display: block;
		fill: color('mobster');
	}

	&:not(.is-active) .icon--eye-crossed,
	&.is-active .icon--eye {
		display: none;
	}
}

.password-strength-meter {
	div {
		background-color: rgba(color('black'), .1);
	}

	&.bad div:nth-child(-n + 1) {
		background-color: #c23333;
	}
	&.ok div:nth-child(-n + 2) {
		background-color: #db7d3a;
	}
	&.good div:nth-child(-n + 3) {
		background-color: #E6CD2D;
	}
	&.great div {
		background-color: #378241;
	}
}

textarea {
	resize: vertical;
}

.styled-select {
	@extend .por;

	select {
		@extend .dib;
		@extend .w100;
		padding: 0.5rem 2.5rem 0.5rem 1rem;
		line-height: 1.5;
		@extend .bgc-white;
		cursor: pointer;
		outline: 0;
		border-radius: 0;
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;

		// Undo the Firefox inner focus ring
		&:focus:-moz-focusring {
			color: transparent;
			text-shadow: 0 0 0 #000;
		}

		// Hide the arrow in IE10 and up
		&::-ms-expand {
			display: none;
		}
	}

	&:after {
		content: '';
		@extend .poa;
		@extend .centery;
		@extend .r1;
		@include triangle(.6em, .4em, down, color('mobster'));
	}
}

// Firefox hack
@-moz-document url-prefix() {
	// Hide the arrow
	.styled-select {
		select {
			text-indent: 0.01px;
			text-overflow: '';
			padding-right: 1rem;
		}

		// <option> elements inherit styles from <select>, so reset them.
		option {
			background: color('white');
		}
	}
}

// IE9 hack to hide the arrow
@media screen and (min-width:0\0) {
	.styled-select {
		select {
			padding: 0.5rem 1.5rem 0.5rem 1rem;

			&:hover,
			&:focus,
			&:active {
				color: color('mobster');
				background: color('white');
			}
		}

		&:after {
			z-index: 2;
		}

		&:before {
			position: absolute;
			top: rem(1);
			right: 1rem;
			bottom: rem(1);
			z-index: 1;
			content: '';
			display: block;
			width: 1.5rem;
			background-color: color('white');
		}
	}
}

// Forms ----------------------------------------------------------------------

.search-form {
	@extend .por;
	padding-right: 7rem;

	button[type="submit"] {
		@extend .poa;
		@extend .t0;
		@extend .r0;
		width: 6rem;
		@extend .px1;
		padding-top: 0.5rem;
	    padding-bottom: 0.5rem;
		border: rem(1) solid color('curious-blue');
	    line-height: inherit;
	}
}

.register-form {
	label {
		input[type="checkbox"],
		input[type="radio"] {
			& + span:before {
				top: .35em;
			}
		}

		input[type="checkbox"]:checked + span:after {
			top: rem(9);
		}
	}
}
